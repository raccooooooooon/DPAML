// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/20/2023 04:11:30"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          fDiv
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module fDiv_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [31:0] DivN;
reg fin;
reg reset;
// wires                                               
wire fout;

// assign statements (if any)                          
fDiv i1 (
// port map - connection between master ports and signals/registers   
	.DivN(DivN),
	.fin(fin),
	.fout(fout),
	.reset(reset)
);
initial 
begin 
#1000000 $finish;
end 
// DivN[ 31 ]
initial
begin
	DivN[31] = 1'b0;
end 
// DivN[ 30 ]
initial
begin
	DivN[30] = 1'b0;
end 
// DivN[ 29 ]
initial
begin
	DivN[29] = 1'b0;
end 
// DivN[ 28 ]
initial
begin
	DivN[28] = 1'b0;
end 
// DivN[ 27 ]
initial
begin
	DivN[27] = 1'b0;
end 
// DivN[ 26 ]
initial
begin
	DivN[26] = 1'b0;
end 
// DivN[ 25 ]
initial
begin
	DivN[25] = 1'b0;
end 
// DivN[ 24 ]
initial
begin
	DivN[24] = 1'b0;
end 
// DivN[ 23 ]
initial
begin
	DivN[23] = 1'b0;
end 
// DivN[ 22 ]
initial
begin
	DivN[22] = 1'b0;
end 
// DivN[ 21 ]
initial
begin
	DivN[21] = 1'b0;
end 
// DivN[ 20 ]
initial
begin
	DivN[20] = 1'b0;
end 
// DivN[ 19 ]
initial
begin
	DivN[19] = 1'b0;
end 
// DivN[ 18 ]
initial
begin
	DivN[18] = 1'b0;
end 
// DivN[ 17 ]
initial
begin
	DivN[17] = 1'b0;
end 
// DivN[ 16 ]
initial
begin
	DivN[16] = 1'b0;
end 
// DivN[ 15 ]
initial
begin
	DivN[15] = 1'b0;
end 
// DivN[ 14 ]
initial
begin
	DivN[14] = 1'b0;
end 
// DivN[ 13 ]
initial
begin
	DivN[13] = 1'b0;
end 
// DivN[ 12 ]
initial
begin
	DivN[12] = 1'b0;
end 
// DivN[ 11 ]
initial
begin
	DivN[11] = 1'b0;
end 
// DivN[ 10 ]
initial
begin
	DivN[10] = 1'b0;
end 
// DivN[ 9 ]
initial
begin
	DivN[9] = 1'b0;
end 
// DivN[ 8 ]
initial
begin
	DivN[8] = 1'b0;
end 
// DivN[ 7 ]
initial
begin
	DivN[7] = 1'b0;
end 
// DivN[ 6 ]
initial
begin
	DivN[6] = 1'b0;
end 
// DivN[ 5 ]
initial
begin
	DivN[5] = 1'b0;
	DivN[5] = #760000 1'b1;
end 
// DivN[ 4 ]
initial
begin
	DivN[4] = 1'b0;
	DivN[4] = #560000 1'b1;
	DivN[4] = #200000 1'b0;
end 
// DivN[ 3 ]
initial
begin
	DivN[3] = 1'b0;
	DivN[3] = #360000 1'b1;
	DivN[3] = #200000 1'b0;
end 
// DivN[ 2 ]
initial
begin
	DivN[2] = 1'b0;
	DivN[2] = #190000 1'b1;
	DivN[2] = #170000 1'b0;
end 
// DivN[ 1 ]
initial
begin
	DivN[1] = 1'b1;
	DivN[1] = #190000 1'b0;
end 
// DivN[ 0 ]
initial
begin
	DivN[0] = 1'b0;
end 

// fin
always
begin
	fin = 1'b0;
	fin = #5000 1'b1;
	#5000;
end 

// reset
initial
begin
	reset = 1'b0;
	reset = #80000 1'b1;
	reset = #80000 1'b0;
	reset = #180000 1'b1;
	reset = #60000 1'b0;
end 
endmodule

